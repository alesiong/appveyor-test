# shallow clone
clone_depth: 10

# os: Visual Studio 2017

platform:
  - x64
  - x86

environment:
  matrix:
   - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
     Toolset: mingw
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    Toolset: v140
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    Toolset: v150

branches:
  except:
    - gh-pages

cache:
  - x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  - i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z

install:
  - git submodule update --init --recursive
  - ps: |
      if ($env:PLATFORM -eq "x64")
      {
          $env:MINGW_DIR = "mingw64"
          $env:MINGW_URL = "https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/4.9.2/threads-win32/seh/x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z/download"
          $env:MINGW_ARCHIVE = "x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z"
      }
      else
      {
          $env:MINGW_DIR = "mingw32"
          $env:MINGW_URL = "https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.9.2/threads-win32/dwarf/i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z/download"
          $env:MINGW_ARCHIVE = "i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z"
      }
      if ($env:appveyor_repo_tag -eq "true")
      {
          $env:configuration = "Release"
      }
      else
      {
          $env:configuration = "Debug"
      }
  - if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - 7z x -y "%MINGW_ARCHIVE%" > nul
  - python -m ensurepip
  - python -m pip install cpp-coveralls==0.3.11
  - ps: Get-Command sh.exe -All | Remove-Item

before_build:
- ps: |
    md build
    cd build
    $generator = switch ($env:TOOLSET)
    {
        "v140" {"Visual Studio 14 2015"}
        "v150" {"Visual Studio 15 2017"}
        "mingw" {"MinGW Makefiles"}
    }
    if (($env:PLATFORM -eq "x64") -and ($env:TOOLSET -ne "mingw"))
    {
        $generator = "$generator Win64"
    }

    if ($env:TOOLSET -eq "mingw")
    {
        $env:PATH = "$pwd.Path\..\$env:MINGW_DIR\bin;$env:PATH"
    }
    cmake -G "$generator" .. -DCMAKE_CONFIGURATION_TYPES="Debug;Release"
    cd ..

build:
  verbosity: minimal

build_script:
  - cd build && cmake --build . --config $env:CONFIGURATION


test_script:
- ps: |
    if ($env:TOOLSET -eq "mingw")
    {
        ctest
    }
    else
    {
        cd tests
        & .\$env:CONFIGURATION\test_all.exe
    }

after_build:
- ps: |
    if ($env:TOOLSET -eq "mingw")
    {
        7z a -tzip windows-$env:PLATFORM-mingw.zip ..\build\libdata.a ..\src\include
    }
    else
    {
        7z a -tzip windows-$env:PLATFORM-msvc-$env:TOOLSET.zip ..\build\$env:CONFIGURATION\data.lib ..\src\include
    }

artifacts:
  - path: build\*.zip
    name: dataLib
    type: zip

deploy:
  provider: GitHub
  description: |
    Releases
  auth_token:
    secure: "55wreyTxkD9ZSxHG49omtDAW3SEx86lz6V5ABL4tV7OVBUzNfLX3Ps2NLsfzTZOE"
  artifact: dataLib
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master
    appveyor_repo_tag: true
