# shallow clone
clone_depth: 1

# os: Visual Studio 2017

platform:
  - x64
  - x86

environment:
  matrix:
   - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
     Toolset: mingw
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    Toolset: v140
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    Toolset: v150


configuration:
  - Debug

install:
  - git submodule update --init --recursive

before_build:
- ps: |
    md build
    cd build
    $generator = switch ($env:TOOLSET)
    {
        "v140" {"Visual Studio 14 2015"}
        "v150" {"Visual Studio 15 2017"}
        "mingw" {"MinGW Makefiles"}
    }
    if (($env:PLATFORM -eq "x64") -and ($env:TOOLSET -ne "mingw"))
    {
        $generator = "$generator Win64"
    }

    if ($env:TOOLSET -eq "mingw")
    {
        rm "C:/Program Files/Git/usr/bin/sh.exe"
        cmake -G "$generator"
    }
    else
    {
        cmake -G "$generator"  ..
    }
    cd ..

build:
  verbosity: minimal

build_script:
- ps: |
    cd build
    & cmake --build . --config $env:CONFIGURATION
    if ($LastExitCode -ne 0) {
        throw "Exec: $ErrorMessage"
    }
test_script:
- ps: |
    if ($env:TOOLSET -eq "mingw")
    {
        make test
    }
    else
    {
        cd tests
        & .\$env:CONFIGURATION\test_all.exe
    }

after_build:
- ps: |
    7z a -tzip windows-$env:PLATFORM-msvc.zip ..\build\$env:CONFIGURATION\data.lib

artifacts:
  - path: build\windows-$(PLATFORM)-msvc.zip
    name: dataLib
    type: zip

deploy:
  provider: GitHub
  description: |
    Releases
  auth_token:
    secure: "55wreyTxkD9ZSxHG49omtDAW3SEx86lz6V5ABL4tV7OVBUzNfLX3Ps2NLsfzTZOE"
  artifact: dataLib
  draft: false
  prerelease: false
  force_update: true
  on:
    branch: master
    appveyor_repo_tag: true
    toolset: v140
